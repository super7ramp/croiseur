/*
 * SPDX-FileCopyrightText: 2023 Antoine Belvire
 * SPDX-License-Identifier: GPL-3.0-or-later
 */

/**
 * Conventions for Java applications.
 */

plugins {
    id 'application'
    id 'com.gitlab.super7ramp.croiseur.java-conventions'
}

configurations.create('dictionaryPath') {
    canBeConsumed = false
    canBeResolved = true
}

/**
 * Configures application parameters.
 *
 * Note that more parameters could be set here ('executableDir', 'applicationDefaultJvmArgs') but
 * in order to clearly separate parameters specific to a launch configuration, only parameters
 * common to all launch configurations are kept here, so 'mainClass' and 'mainModule'.
 */
application {
    mainClass = "${project.group}.${project.name}.Main".replace('-', '.')
    mainModule = "${project.group}.${project.name}".replace('-', '.')
}

def dictionaryDir = project.property('datadir') + '/dictionaries'

applicationDistribution.from(configurations.dictionaryPath) {
    into dictionaryDir
}

/**
 * Configures parameters to be used when launching the application from distributed start script.
 *
 * Note that $APP_HOME corresponds to the installation prefix. Dictionary data path is set
 * relatively to this prefix. E.g. if one wants to have binaries in '/usr/bin' and data in
 * '/usr/share/crosswords/dictionaries' then one has to set the datadir property to
 * 'share/crosswords/dictionaries' and copy the installation tree to '/usr'.
 */
tasks.named('startScripts') {
    executableDir = project.property('bindir')

    // $APP_HOME cannot be referenced directly in defaultJvmOpts (template engine escapes it).
    // See https://discuss.gradle.org/t/hack-to-pass-app-home-as-system-property-in-start-scripts-no-longer-working/42870/4.
    def appHome = 'APP_HOME_PLACEHOLDER'
    defaultJvmOpts = ["-Dcom.gitlab.super7ramp.croiseur.dictionary." +
                              "path=${appHome}/${dictionaryDir}/*".toString()]
    doLast {
        unixScript.text = unixScript.text.replace(appHome, "'\$APP_HOME'")
        windowsScript.text = windowsScript.text.replace(appHome, '%APP_HOME%')
    }
}

/**
 * Configures parameters to be used when launch the application via './gradlew run'.
 */
afterEvaluate {
    tasks.named('run') {
        def dictionaryPath = configurations.dictionaryPath.asPath
        systemProperty 'com.gitlab.super7ramp.croiseur.dictionary.path=', dictionaryPath
    }
}
