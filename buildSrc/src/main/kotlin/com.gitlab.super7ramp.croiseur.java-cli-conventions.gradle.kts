/*
 * SPDX-FileCopyrightText: 2023 Antoine Belvire
 * SPDX-License-Identifier: GPL-3.0-or-later
 */

/**
 * Conventions for Java CLI applications define:
 * <ul>
 *     <li>A systematic mainModule/mainClass format
 *     <li>A dependency on the picocli framework
 *     <li>A dependency on graalvm to allow native compilation
 * </ul>
 */

plugins {
    id("com.gitlab.super7ramp.croiseur.java-application-conventions")
    // Cannot use version catalog in plugins block of pre-compiled script plugins, i.e.
    // "alias(sbom.plugins.native)" doesn't work (gh#gradle/gradle#15383)
    id("org.graalvm.buildtools.native")
}

// Hack to make version catalog works with kotlin, see https://github.com/gradle/gradle/issues/15383
val sbom = the<org.gradle.accessors.dm.LibrariesForSbom>()
dependencies {
    implementation(sbom.picocli.framework)
    annotationProcessor(sbom.picocli.codegen)
}

/**
 * Uses picocli-codegen annotation processor to create native compilation configuration.
 */
tasks.named<JavaCompile>("compileJava") {
    // The files generated by picocli-codegen are written to
    // META-INF/native-image/picocli-generated/${projectId}.
    val projectId = "${project.group}.${project.name}".replace('-', '.')
    options.compilerArgs.addAll(listOf("-Aproject=${projectId}", "-Averbose"))
}

/**
 * Native compilation option conventions.
 */
graalvmNative {
    binaries {
        named("main") {
            // Verbose so that we can see what options are passed to native-image
            verbose.set(true)
        }
    }
}
