# SPDX-FileCopyrightText: 2023 Antoine Belvire
# SPDX-License-Identifier: GPL-3.0-or-later

[versions]
cargo-plugin = "1.1.0"
conveyor-plugin = "1.6"
cucumber = "7.15.0"
java = "21"
javafx = "21"
javafx-plugin = "0.1.0"
junit5 = "5.10.1"
junit5-platform = "1.10.1"
mockito = "5.9.0"
native-plugin = "0.9.28"
openai = "1.0.0-beta.6"
picocli = "4.7.5"
sat4j = "2.3.6"
slf4j-nop = "2.0.11"
testfx = "4.0.17"
testfx-hamcrest = "2.2"
testfx-monocle = "jfx-21"

[libraries]
# BDD library, for acceptance tests
cucumber = { module = "io.cucumber:cucumber-java", version.ref = "cucumber" }
cucumber-junit5-engine = { module = "io.cucumber:cucumber-junit-platform-engine", version.ref = "cucumber" }
cucumber-picocontainer = { module = "io.cucumber:cucumber-picocontainer", version.ref = "cucumber" }
# Test libraries
junit5-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junit5-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
junit5-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5" }
junit5-platform-suite = { module = "org.junit.platform:junit-platform-suite", version.ref = "junit5-platform" }
# Additional test library for mock objects
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
# A plugin for creating native executable using GraalVM, only used by cli module for now. It
# should be in the plugin section but somehow gradle doesn't recognize it in buildSrc
native = { module = "org.graalvm.buildtools:native-gradle-plugin", version.ref = "native-plugin" }
# A client to OpenAI's API, for clues
openai = { module = "com.azure:azure-ai-openai", version.ref = "openai" }
# Picocli is a framework for building command-line applications; only used by cli module
picocli-codegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli" }
picocli-framework = { module = "info.picocli:picocli", version.ref = "picocli" }
# Sat4j is a SAT solver
sat4j-core = { module = "org.ow2.sat4j:org.ow2.sat4j.core", version.ref = "sat4j" }
sat4j-pb = { module = "org.ow2.sat4j:org.ow2.sat4j.pb", version.ref = "sat4j" }
# A dummy implementation of sl4j-api (pulled transitively), to quiet sl4j-api warning messages
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j-nop" } 
# Testing framework for JavaFx application
testfx-core = { module = "org.testfx:testfx-core", version.ref = "testfx" }
testfx-hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "testfx-hamcrest" }
testfx-junit = { module = "org.testfx:testfx-junit5", version.ref = "testfx" }
testfx-monocle = { module = "one.jpro:openjfx-monocle", version.ref = "testfx-monocle" }

[plugins]
# Plugin to help embedding rust code, only used by native solvers
cargo = { id = "io.github.arc-blroth.cargo-wrapper", version.ref = "cargo-plugin" }
# Plugin to pull JavaFx; only used by gui module
javafx = { id = "org.openjfx.javafxplugin", version.ref = "javafx-plugin" }
# Plugin for conveyor (to create application package)
conveyor = { id = "dev.hydraulic.conveyor", version.ref = "conveyor-plugin" }
